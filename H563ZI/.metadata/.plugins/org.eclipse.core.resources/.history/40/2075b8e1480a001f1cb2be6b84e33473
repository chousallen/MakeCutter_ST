/*
 * keypad.c
 *
 *  Created on: May 5, 2024
 *      Author: choua
 */

#include "stm32h5xx.h"
#include "keypad.h"
#include <stdbool.h>

extern uint8_t Last_Key_Down[1];

void Keypad_Start(Keypad *kb, GPIO_TypeDef* *_RowPorts, GPIO_TypeDef* *_ColPorts, uint16_t *_RowPins, uint16_t *_ColPins, uint8_t **keys)
{
	kb->RowPorts = _RowPorts;
	kb->ColPorts = _ColPorts;
	kb->RowPins = _RowPins;
	kb->ColPins = _ColPins;
	kb->rising_pin = 255;
	kb->let_falling_pin = 255;
	Last_Key_Down[1] = 0;

	HAL_GPIO_WritePin(kb->RowPorts[0], kb->RowPins[0], SET);
	HAL_GPIO_WritePin(kb->RowPorts[1], kb->RowPins[1], SET);
	HAL_GPIO_WritePin(kb->RowPorts[2], kb->RowPins[2], SET);
	HAL_GPIO_WritePin(kb->RowPorts[3], kb->RowPins[3], SET);
}

void Keypad_Rising_EXTI(Keypad *kb, uint16_t GPIO_Pin)
{
	switch (GPIO_Pin)
	{
		case (kb->ColPins[0]):
			kb->rising_pin = 0;
			break;
		case (kb->ColPins[1]):
			kb->rising_pin = 1;
			break;
		case (kb->ColPins[2]):
			kb->rising_pin = 2;
			break;
		case (kb->ColPins[3]):
			kb->rising_pin = 3;
			break;
		default:
			return;
			break;
	}
	kb->key_down = true;
	kb->let_falling_pin = 0;
	HAL_GPIO_WritePin(kb->RowPorts[0], kb->RowPins[0], RESET);
	HAL_GPIO_WritePin(kb->RowPorts[0], kb->RowPins[0], SET);
	kb->let_falling_pin = 1;
	HAL_GPIO_WritePin(kb->RowPorts[1], kb->RowPins[1], RESET);
	HAL_GPIO_WritePin(kb->RowPorts[1], kb->RowPins[1], SET);
	kb->let_falling_pin = 2;
	HAL_GPIO_WritePin(kb->RowPorts[2], kb->RowPins[2], RESET);
	HAL_GPIO_WritePin(kb->RowPorts[2], kb->RowPins[2], SET);
	kb->let_falling_pin = 3;
	HAL_GPIO_WritePin(kb->RowPorts[3], kb->RowPins[3], RESET);
	HAL_GPIO_WritePin(kb->RowPorts[3], kb->RowPins[3], SET);
	kb->let_falling_pin = 4;
	kb->rising_pin = 4;
}

void Keypad_Falling_EXTI(Keypad *kb, uint16_t GPIO_Pin)
{
	if(!kb->key_down || GPIO_Pin != kb->rising_pin)
		return ;
	if(kb->let_falling_pin > 3)
		return ;
	Last_Key_Down[0] = kb->keys[kb->rising_pin][kb->let_falling_pin];

	kb->key_down = false;
}
